image: archlinux
shell: true
oauth: git.sr.ht/OBJECTS:RW git.sr.ht/REPOSITORIES:RO git.sr.ht/PROFILE:RO
packages:
  - ghcup-hs-bin
  - hut
  - pacman-contrib
  - bash-completion
triggers:
  - action: email
    condition: always
    to: Petrus <petrus@dismail.de>
secrets:
  - 044052f6-02ad-4a33-89d8-0f2114b04591
environment:
  GIT_SSH_COMMAND: ssh -o StrictHostKeyChecking=no
sources:
  - https://git.sr.ht/~petrus/mailctl
tasks:
  - setup-buildenv: |
      cd mailctl
      version=$(awk '/^version:/ {print $2}' mailctl.cabal)
      tag=$(git describe --exact-match 2>/dev/null || echo none)
      kernel=$(uname -s)
      machine=$(uname -m)
      cd
      echo "export VERSION=$version" >> .buildenv
      echo "export TAG=$tag" >> .buildenv
      echo "export KERNEL=$kernel" >> .buildenv
      echo "export MACHINE=$machine" >> .buildenv
      echo 'export PATH=~/.ghcup/bin:~/.cabal/bin:~/.local/bin:$PATH' >> .buildenv
      echo 'alias ls="ls --color=auto -alF --group-directories-first"' >> .buildenv

  - setup-ghc: |
      ghcup install ghc 9.6.2
      ghcup set ghc 9.6.2
      ghcup install cabal 3.10.1.0
      ghcup set cabal 3.10.1.0
      ghcup list -c set
      cabal update

  - build-mailctl: |
      cd mailctl
      cabal freeze
      cabal build

  - test: |
      mkdir -p ~/.local/var/mailctl ~/.config/mailctl
      cd mailctl
      cabal run mailctl -- -h
      cabal run mailctl -- --version

  - release: |
      reldir="mailctl-$VERSION-$KERNEL-$MACHINE"
      mkdir $reldir
      install -s $(cabal list-bin mailctl) $reldir
      cp mailctl/{LICENSE,README.md} $reldir
      cp -r mailctl/configs $reldir
      cp -r mailctl/completions $reldir
      cp mailctl/cabal.project.freeze $reldir
      tar cfz $reldir.tgz $reldir

      ln -s $reldir.tgz mailctl.tgz
      if [[ $TAG != none ]]; then
        hut git artifact upload --rev "$TAG" -r mailctl $reldir.tgz
      fi

  - aur: |
      # export GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no -i ~/.ssh/<secret>"
      git clone ssh://aur@aur.archlinux.org/mailctl-bin.git

      cd mailctl/aur
      sed -i "s/^pkgver=.*/pkgver=$VERSION/" PKGBUILD
      # bail out if there is no release yet
      updpkgsums || exit 0
      makepkg --printsrcinfo >.SRCINFO
      cp PKGBUILD .INSTALL .SRCINFO ~/mailctl-bin

      cd ~/mailctl-bin
      if [[ $TAG != none ]]; then
        git commit -a -m "release $TAG"
        git push
      fi

      if [[ $TAG !=  $VERSION ]]; then
        echo "WARNING: tag=$TAG != version=$VERSION"
      fi

artifacts:
  - mailctl.tgz

